####################################################
# test - jsoncxf                                   #
# ==========                                       #
# Configurazione di ambiente: <ambiente>           #
####################################################

	
			
# impostare a true nel caso in cui si debba disabilitare 
# la protezione XSRF
xsrffilter.disabled=true	

# impostare a true per permettere il passaggio di un finto header shibboleth
# tramite request parameter (modalita' di sviluppo in assenza di configurazione
# effettiva)
idadapterfilter.devmode=true

# impostare a true se si desidera abilitare il CORS (utile in alcuni casi per lo 
# sviluppo locale)
corsfilter.enablecors=true


# impostare indirizzo hostname ed endpoint base del server dove risiede mudeopensrvcommon
mudeopensrvcommon_hostname=http://<VIRTUAL_HOST_DI_PUBBLICAZIONE_AMBIENTE_DEV>
mudeopensrvcommon_endpoint_base=/mudeopen/srvcommon/rest
datasource_jndi=java:jboss/datasources/mudeopensrvapiDS
#hibernate
hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
hibernate.temp.use_jdbc_metadata_defaults=false
showSql=false
generateDdl=false
database=POSTGRESQL
hibernate.generate_statistics=false

#MAIL PARAM 
mail.host=<HOST_MAIL>
mail.port=25
mail.username=
mail.password=
mail.from=mudetest_noreply@csi.it

mockgeecosigmater=true

#LOGGING ASPECT POINTCUTS 
logs.aspect.common=\
			<aop:pointcut id="pointCutAroundCommon"   expression="execution(* it.csi.mudeopen.mudeopensrvcommon.business.be.web.impl..*(..)) || execution(* it.csi.mudeopen.mudeopensrvcommon.business.be.mapper..impl..*(..)) || execution(* it.csi.mudeopen.mudeopensrvcommon.business.be.service.impl..*(..)) || execution(* it.csi.mudeopen.mudeopensrvcommon.business.be.service.utils..*(..)) || execution(* it.csi.mudeopen.mudeopensrvcommon.business.be.helper..*(..)) || execution(* it.csi.mudeopen.mudeopensrvcommon.business.be.repository..*(..))" />              \
			<aop:around method="logInputOutput" pointcut-ref="pointCutAroundCommon" />                                                                        \
			<aop:pointcut id="pointCutAroundWebAPI"   expression="execution(* it.csi.mudeopen.mudeopenboweb.business.be.web.impl..*(..)) || execution(* it.csi.mudeopen.mudeopensrvapi.business.be.service.impl..*(..)) || execution(* it.csi.mudeopen.mudeopensrvapi.business.be.repository..*(..))" />              \
			<aop:around method="logInputOutput" pointcut-ref="pointCutAroundWebAPI" />                                                                        \
			<aop:pointcut id="pointCutExceptions"   expression="execution(* it.csi.mudeopen.mudeopensrvcommon.business.be.web.impl..*(..)) || execution(* it.csi.mudeopen.mudeopensrvcommon.business.be.mapper..impl..*(..)) || execution(* it.csi.mudeopen.mudeopensrvcommon.business.be.service.impl..*(..)) || execution(* it.csi.mudeopen.mudeopensrvcommon.business.be.service.utils..*(..)) || execution(* it.csi.mudeopen.mudeopensrvcommon.business.be.helper..*(..)) || execution(* it.csi.mudeopen.mudeopensrvcommon.business.be.repository..*(..))" />             \
			<aop:after-throwing method="logStacktrace" throwing="e" pointcut-ref="pointCutExceptions"/>			             \
			<aop:pointcut id="pointCutExceptionsAPI"   expression="execution(* it.csi.mudeopen.mudeopensrvapi.business.be.web.impl..*(..)) || execution(* it.csi.mudeopen.mudeopensrvapi.business.be.service.impl..*(..)) || execution(* it.csi.mudeopen.mudeopensrvapi.business.be.repository..*(..))" />             \
			<aop:after-throwing method="logStacktrace" throwing="e" pointcut-ref="pointCutExceptionsAPI"/>			
			