/*
 *  SPDX-FileCopyrightText: Copyright 2020 - 2021 | CSI Piemonte
 *  SPDX-License-Identifier: EUPL-1.2
 */
/*
 * ECMEngine
 * Servizi di fruizione ECM INDEX.
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package it.csi.mudeopen.mudeopensrvcommon.business.be.helper.index.dto;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

@ApiModel(description = "Parametri di ricerca.")
@javax.annotation.Generated(value = "it.csi.mudeopen.mudeopensrvcommon.business.be.helper.cosmo.swagger.codegen.languages.JavaClientCodegen", date = "2021-03-29T13:41:28.556Z")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class SearchParams {
    @JsonProperty("luceneQuery")
    private String luceneQuery = null;

    @JsonProperty("pageSize")
    private Integer pageSize = null;

    @JsonProperty("pageIndex")
    private Integer pageIndex = null;

    @JsonProperty("limit")
    private Integer limit = null;

    @JsonProperty("sortFields")
    private List<Object> sortFields = null;

    public SearchParams luceneQuery(String luceneQuery) {
        this.luceneQuery = luceneQuery;
        return this;
    }

    @ApiModelProperty(example = "PATH:\"/app:company_home/cm:prova/_*\"", value = "Query della ricerca.")
    public String getLuceneQuery() {
        return luceneQuery;
    }

    public void setLuceneQuery(String luceneQuery) {
        this.luceneQuery = luceneQuery;
    }

    public SearchParams pageSize(Integer pageSize) {
        this.pageSize = pageSize;
        return this;
    }

    @ApiModelProperty(example = "10", value = "Dimensione della pagina della ricerca.")
    public Integer getPageSize() {
        return pageSize;
    }

    public void setPageSize(Integer pageSize) {
        this.pageSize = pageSize;
    }

    public SearchParams pageIndex(Integer pageIndex) {
        this.pageIndex = pageIndex;
        return this;
    }

    @ApiModelProperty(example = "1", value = "Indice della pagina della ricerca.")
    public Integer getPageIndex() {
        return pageIndex;
    }

    public void setPageIndex(Integer pageIndex) {
        this.pageIndex = pageIndex;
    }

    public SearchParams limit(Integer limit) {
        this.limit = limit;
        return this;
    }

    @ApiModelProperty(example = "0", value = "Numero massimo di associazioni da ricercare.")
    public Integer getLimit() {
        return limit;
    }

    public void setLimit(Integer limit) {
        this.limit = limit;
    }

    public SearchParams sortFields(List<Object> sortFields) {
        this.sortFields = sortFields;
        return this;
    }

    public SearchParams addSortFieldsItem(Object sortFieldsItem) {
        if (this.sortFields == null) {
            this.sortFields = new ArrayList<Object>();
        }
        this.sortFields.add(sortFieldsItem);
        return this;
    }

    @ApiModelProperty(value = "Campi su cui eseguire l'ordinamento.")
    public List<Object> getSortFields() {
        return sortFields;
    }

    public void setSortFields(List<Object> sortFields) {
        this.sortFields = sortFields;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SearchParams searchParams = (SearchParams) o;
        return Objects.equals(this.luceneQuery, searchParams.luceneQuery) &&
                Objects.equals(this.pageSize, searchParams.pageSize) &&
                Objects.equals(this.pageIndex, searchParams.pageIndex) &&
                Objects.equals(this.limit, searchParams.limit) &&
                Objects.equals(this.sortFields, searchParams.sortFields);
    }

    @Override
    public int hashCode() {
        return Objects.hash(luceneQuery, pageSize, pageIndex, limit, sortFields);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class SearchParams {\n");

        sb.append("    luceneQuery: ").append(toIndentedString(luceneQuery)).append("\n");
        sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
        sb.append("    pageIndex: ").append(toIndentedString(pageIndex)).append("\n");
        sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
        sb.append("    sortFields: ").append(toIndentedString(sortFields)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}