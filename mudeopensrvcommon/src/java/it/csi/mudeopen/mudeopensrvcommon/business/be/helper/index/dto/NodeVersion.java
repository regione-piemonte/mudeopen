/*
 *  SPDX-FileCopyrightText: Copyright 2020 - 2021 | CSI Piemonte
 *  SPDX-License-Identifier: EUPL-1.2
 */
/*
 * ECMEngine
 * Servizi di fruizione ECM INDEX.
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package it.csi.mudeopen.mudeopensrvcommon.business.be.helper.index.dto;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

@ApiModel(description = "Versione di un nodo.")
@javax.annotation.Generated(value = "it.csi.mudeopen.mudeopensrvcommon.business.be.helper.cosmo.swagger.codegen.languages.JavaClientCodegen", date = "2021-03-29T13:41:28.556Z")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class NodeVersion {
    @JsonProperty("creator")
    private String creator = null;

    @JsonProperty("createdDate")
    private String createdDate = null;

    @JsonProperty("description")
    private String description = null;

    @JsonProperty("versionLabel")
    private String versionLabel = null;

    @JsonProperty("versionedNodeUid")
    private String versionedNodeUid = null;

    @JsonProperty("versionProperties")
    private List<Property> versionProperties = null;

    public NodeVersion creator(String creator) {
        this.creator = creator;
        return this;
    }

    @ApiModelProperty(example = "creator", value = "Nome utente del creatore della versione.")
    public String getCreator() {
        return creator;
    }

    public void setCreator(String creator) {
        this.creator = creator;
    }

    public NodeVersion createdDate(String createdDate) {
        this.createdDate = createdDate;
        return this;
    }

    @ApiModelProperty(example = "2020-12-16T09:56:49.059+0000", value = "Data di creazione della versione.")
    public String getCreatedDate() {
        return createdDate;
    }

    public void setCreatedDate(String createdDate) {
        this.createdDate = createdDate;
    }

    public NodeVersion description(String description) {
        this.description = description;
        return this;
    }

    @ApiModelProperty(example = "description", value = "Descrizione della versione.")
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public NodeVersion versionLabel(String versionLabel) {
        this.versionLabel = versionLabel;
        return this;
    }

    @ApiModelProperty(example = "1", value = "Numero di versione.")
    public String getVersionLabel() {
        return versionLabel;
    }

    public void setVersionLabel(String versionLabel) {
        this.versionLabel = versionLabel;
    }

    public NodeVersion versionedNodeUid(String versionedNodeUid) {
        this.versionedNodeUid = versionedNodeUid;
        return this;
    }

    @ApiModelProperty(example = "2bc43299-1ea4-11eb-9204-9f3a5004d33a", value = "UID del nodo da cui la versione è stata creata.")
    public String getVersionedNodeUid() {
        return versionedNodeUid;
    }

    public void setVersionedNodeUid(String versionedNodeUid) {
        this.versionedNodeUid = versionedNodeUid;
    }

    public NodeVersion versionProperties(List<Property> versionProperties) {
        this.versionProperties = versionProperties;
        return this;
    }

    public NodeVersion addVersionPropertiesItem(Property versionPropertiesItem) {
        if (this.versionProperties == null) {
            this.versionProperties = new ArrayList<Property>();
        }
        this.versionProperties.add(versionPropertiesItem);
        return this;
    }

    @ApiModelProperty(value = "Proprietà della versione.")
    public List<Property> getVersionProperties() {
        return versionProperties;
    }

    public void setVersionProperties(List<Property> versionProperties) {
        this.versionProperties = versionProperties;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        NodeVersion nodeVersion = (NodeVersion) o;
        return Objects.equals(this.creator, nodeVersion.creator) &&
                Objects.equals(this.createdDate, nodeVersion.createdDate) &&
                Objects.equals(this.description, nodeVersion.description) &&
                Objects.equals(this.versionLabel, nodeVersion.versionLabel) &&
                Objects.equals(this.versionedNodeUid, nodeVersion.versionedNodeUid) &&
                Objects.equals(this.versionProperties, nodeVersion.versionProperties);
    }

    @Override
    public int hashCode() {
        return Objects.hash(creator, createdDate, description, versionLabel, versionedNodeUid, versionProperties);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class NodeVersion {\n");

        sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
        sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    versionLabel: ").append(toIndentedString(versionLabel)).append("\n");
        sb.append("    versionedNodeUid: ").append(toIndentedString(versionedNodeUid)).append("\n");
        sb.append("    versionProperties: ").append(toIndentedString(versionProperties)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}