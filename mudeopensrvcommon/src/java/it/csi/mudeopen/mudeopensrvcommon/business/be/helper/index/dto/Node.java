/*
 *  SPDX-FileCopyrightText: Copyright 2020 - 2021 | CSI Piemonte
 *  SPDX-License-Identifier: EUPL-1.2
 */
/*
 * ECMEngine
 * Servizi di fruizione ECM INDEX.
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package it.csi.mudeopen.mudeopensrvcommon.business.be.helper.index.dto;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

@ApiModel(description = "Rappresenta un nodo, con tutte le informazioni necessarie per la sua creazione o modifica.   >     Ogni nodo è caratterizzato da un identificativo univoco (UID) che ne consente l'individuazione all'interno del tenant. ")
@javax.annotation.Generated(value = "it.csi.mudeopen.mudeopensrvcommon.business.be.helper.cosmo.swagger.codegen.languages.JavaClientCodegen", date = "2021-03-29T13:41:28.556Z")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class Node {
    @JsonProperty("uid")
    private String uid = null;

    @JsonProperty("typePrefixedName")
    private String typePrefixedName = null;

    @JsonProperty("prefixedName")
    private String prefixedName = null;

    @JsonProperty("modelPrefixedName")
    private String modelPrefixedName = null;

    @JsonProperty("parentAssocTypePrefixedName")
    private String parentAssocTypePrefixedName = null;

    @JsonProperty("contentPropertyPrefixedName")
    private String contentPropertyPrefixedName = null;

    @JsonProperty("mimeType")
    private String mimeType = null;

    @JsonProperty("encoding")
    private String encoding = null;

    @JsonProperty("encryptionInfo")
    private EncryptionInfo encryptionInfo = null;

    @JsonProperty("properties")
    private List<Property> properties = null;

    @JsonProperty("aspects")
    private List<Aspect> aspects = null;

    public Node uid(String uid) {
        this.uid = uid;
        return this;
    }

    @ApiModelProperty(example = "c77bc395-2a71-11eb-9691-b7b00e8a99a0", value = "UID del nodo.")
    public String getUid() {
        return uid;
    }

    public void setUid(String uid) {
        this.uid = uid;
    }

    public Node typePrefixedName(String typePrefixedName) {
        this.typePrefixedName = typePrefixedName;
        return this;
    }

    @ApiModelProperty(example = "cm:content", value = "Prefixed name del tipo del nodo.")
    public String getTypePrefixedName() {
        return typePrefixedName;
    }

    public void setTypePrefixedName(String typePrefixedName) {
        this.typePrefixedName = typePrefixedName;
    }

    public Node prefixedName(String prefixedName) {
        this.prefixedName = prefixedName;
        return this;
    }

    @ApiModelProperty(example = "cm:prova.pdf", value = "Rappresenta il prefixed name.")
    public String getPrefixedName() {
        return prefixedName;
    }

    public void setPrefixedName(String prefixedName) {
        this.prefixedName = prefixedName;
    }

    public Node modelPrefixedName(String modelPrefixedName) {
        this.modelPrefixedName = modelPrefixedName;
        return this;
    }

    @ApiModelProperty(example = "cm:contentmodel", value = "Prefixed name del modello del nodo.")
    public String getModelPrefixedName() {
        return modelPrefixedName;
    }

    public void setModelPrefixedName(String modelPrefixedName) {
        this.modelPrefixedName = modelPrefixedName;
    }

    public Node parentAssocTypePrefixedName(String parentAssocTypePrefixedName) {
        this.parentAssocTypePrefixedName = parentAssocTypePrefixedName;
        return this;
    }

    @ApiModelProperty(example = "cm:contains", value = "Prefixed name dell'associazione padre/figlio del nodo.")
    public String getParentAssocTypePrefixedName() {
        return parentAssocTypePrefixedName;
    }

    public void setParentAssocTypePrefixedName(String parentAssocTypePrefixedName) {
        this.parentAssocTypePrefixedName = parentAssocTypePrefixedName;
    }

    public Node contentPropertyPrefixedName(String contentPropertyPrefixedName) {
        this.contentPropertyPrefixedName = contentPropertyPrefixedName;
        return this;
    }

    @ApiModelProperty(example = "cm:content", value = "Prefixed name della proprietà che rappresenta il contenuto binario del nodo.")
    public String getContentPropertyPrefixedName() {
        return contentPropertyPrefixedName;
    }

    public void setContentPropertyPrefixedName(String contentPropertyPrefixedName) {
        this.contentPropertyPrefixedName = contentPropertyPrefixedName;
    }

    public Node mimeType(String mimeType) {
        this.mimeType = mimeType;
        return this;
    }

    @ApiModelProperty(example = "application/octet-stream", value = "MIME-Type del contenuto binario del nodo.")
    public String getMimeType() {
        return mimeType;
    }

    public void setMimeType(String mimeType) {
        this.mimeType = mimeType;
    }

    public Node encoding(String encoding) {
        this.encoding = encoding;
        return this;
    }

    @ApiModelProperty(example = "UTF-8", value = "Codifica del contenuto binario del nodo.")
    public String getEncoding() {
        return encoding;
    }

    public void setEncoding(String encoding) {
        this.encoding = encoding;
    }

    public Node encryptionInfo(EncryptionInfo encryptionInfo) {
        this.encryptionInfo = encryptionInfo;
        return this;
    }

    @ApiModelProperty(value = "")
    public EncryptionInfo getEncryptionInfo() {
        return encryptionInfo;
    }

    public void setEncryptionInfo(EncryptionInfo encryptionInfo) {
        this.encryptionInfo = encryptionInfo;
    }

    public Node properties(List<Property> properties) {
        this.properties = properties;
        return this;
    }

    public Node addPropertiesItem(Property propertiesItem) {
        if (this.properties == null) {
            this.properties = new ArrayList<Property>();
        }
        this.properties.add(propertiesItem);
        return this;
    }

    @ApiModelProperty(value = "Elenco delle proprietà del nodo.")
    public List<Property> getProperties() {
        return properties;
    }

    public void setProperties(List<Property> properties) {
        this.properties = properties;
    }

    public Node aspects(List<Aspect> aspects) {
        this.aspects = aspects;
        return this;
    }

    public Node addAspectsItem(Aspect aspectsItem) {
        if (this.aspects == null) {
            this.aspects = new ArrayList<Aspect>();
        }
        this.aspects.add(aspectsItem);
        return this;
    }

    @ApiModelProperty(value = "Aspetti del nodo.")
    public List<Aspect> getAspects() {
        return aspects;
    }

    public void setAspects(List<Aspect> aspects) {
        this.aspects = aspects;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Node node = (Node) o;
        return Objects.equals(this.uid, node.uid) &&
                Objects.equals(this.typePrefixedName, node.typePrefixedName) &&
                Objects.equals(this.prefixedName, node.prefixedName) &&
                Objects.equals(this.modelPrefixedName, node.modelPrefixedName) &&
                Objects.equals(this.parentAssocTypePrefixedName, node.parentAssocTypePrefixedName) &&
                Objects.equals(this.contentPropertyPrefixedName, node.contentPropertyPrefixedName) &&
                Objects.equals(this.mimeType, node.mimeType) &&
                Objects.equals(this.encoding, node.encoding) &&
                Objects.equals(this.encryptionInfo, node.encryptionInfo) &&
                Objects.equals(this.properties, node.properties) &&
                Objects.equals(this.aspects, node.aspects);
    }

    @Override
    public int hashCode() {
        return Objects.hash(uid, typePrefixedName, prefixedName, modelPrefixedName, parentAssocTypePrefixedName, contentPropertyPrefixedName, mimeType, encoding, encryptionInfo, properties, aspects);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Node {\n");

        sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
        sb.append("    typePrefixedName: ").append(toIndentedString(typePrefixedName)).append("\n");
        sb.append("    prefixedName: ").append(toIndentedString(prefixedName)).append("\n");
        sb.append("    modelPrefixedName: ").append(toIndentedString(modelPrefixedName)).append("\n");
        sb.append("    parentAssocTypePrefixedName: ").append(toIndentedString(parentAssocTypePrefixedName)).append("\n");
        sb.append("    contentPropertyPrefixedName: ").append(toIndentedString(contentPropertyPrefixedName)).append("\n");
        sb.append("    mimeType: ").append(toIndentedString(mimeType)).append("\n");
        sb.append("    encoding: ").append(toIndentedString(encoding)).append("\n");
        sb.append("    encryptionInfo: ").append(toIndentedString(encryptionInfo)).append("\n");
        sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
        sb.append("    aspects: ").append(toIndentedString(aspects)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}