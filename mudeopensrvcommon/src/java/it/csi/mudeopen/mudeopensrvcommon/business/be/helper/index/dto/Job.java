/*
 *  SPDX-FileCopyrightText: Copyright 2020 - 2021 | CSI Piemonte
 *  SPDX-License-Identifier: EUPL-1.2
 */
/*
 * ECMEngine
 * Servizi di fruizione ECM INDEX.
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package it.csi.mudeopen.mudeopensrvcommon.business.be.helper.index.dto;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

@ApiModel(description = "Rappresenta un job, ovvero una richiesta asincrona di esecuzione di un servizio.")
@javax.annotation.Generated(value = "it.csi.mudeopen.mudeopensrvcommon.business.be.helper.cosmo.swagger.codegen.languages.JavaClientCodegen", date = "2021-03-29T13:41:28.556Z")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class Job {
    @JsonProperty("name")
    private String name = null;

    @JsonProperty("status")
    private String status = null;

    @JsonProperty("created")
    private String created = null;

    @JsonProperty("updated")
    private String updated = null;

    @JsonProperty("message")
    private String message = null;

    public Job name(String name) {
        this.name = name;
        return this;
    }

    @ApiModelProperty(example = "SERVICE_LinkContent_77b51e50-4b4f-11eb-9691-b7b00e8a99a0", value = "Nome del job.")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Job status(String status) {
        this.status = status;
        return this;
    }

    @ApiModelProperty(example = "FINISHED", value = "Stato del job, che pu√≤ essere READY, RUNNING, FINISHED, ERROR.")
    public String getStatus() {
        return status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    public Job created(String created) {
        this.created = created;
        return this;
    }

    @ApiModelProperty(example = "2020-12-31T10:03:44.000+0000", value = "Data di creazione del job.")
    public String getCreated() {
        return created;
    }

    public void setCreated(String created) {
        this.created = created;
    }

    public Job updated(String updated) {
        this.updated = updated;
        return this;
    }

    @ApiModelProperty(example = "2020-12-31T10:04:00.000+0000", value = "Data di ultimo aggiornamento del job.")
    public String getUpdated() {
        return updated;
    }

    public void setUpdated(String updated) {
        this.updated = updated;
    }

    public Job message(String message) {
        this.message = message;
        return this;
    }

    @ApiModelProperty(value = "Messaggio del job, valorizzato specialmente in caso di errore.")
    public String getMessage() {
        return message;
    }

    public void setMessage(String message) {
        this.message = message;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Job job = (Job) o;
        return Objects.equals(this.name, job.name) &&
                Objects.equals(this.status, job.status) &&
                Objects.equals(this.created, job.created) &&
                Objects.equals(this.updated, job.updated) &&
                Objects.equals(this.message, job.message);
    }

    @Override
    public int hashCode() {
        return Objects.hash(name, status, created, updated, message);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Job {\n");

        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    created: ").append(toIndentedString(created)).append("\n");
        sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
        sb.append("    message: ").append(toIndentedString(message)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}